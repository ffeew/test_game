/**
* Encodes 4 numbers to their appropriate 8-bit seven segment display codes
* 
* @input clk      - the standard clock input
* @input rst      - the standard reset input
* @input values   - an array of four 5-bit numbers which need encoding
*
* @output seg     - the inverted 8 bit code to use for lighting up the selected seven segment display
* @output sel     - the inverted 4 bit code to select which seven segment display to light up
*/

module multi_seven_seg(
    input clk,                // clock
    input rst,                // reset
    input values [4][5],      // values to show
    output seg [8],           // LED segments
    output sel [4]            // Digit select
  ) {
 
  .clk(clk), .rst(rst) {
    counter ctr (#DIV(16), #SIZE(2), #TOP(3)); 
  }
 
  seven_seg seg_dec;                      // segment decoder
  decoder digit_dec (#WIDTH(2));          // digit decoder
 
  always {
    seg_dec.char = values[ctr.value];     // select the value for the active digit
    seg = ~seg_dec.segs;                  // output the decoded value
 
    digit_dec.in = ctr.value;             // decode active digit to one-hot
    sel = ~digit_dec.out;                 // output the active digit
  }
}